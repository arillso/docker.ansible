{
        "$schema": "https://docs.renovatebot.com/renovate-schema.json",
        "extends": [
                "config:best-practices",
                ":dependencyDashboard",
                ":semanticCommits"
        ],
        "timezone": "Europe/Zurich",
        "schedule": ["before 5am on Friday"],
        "prConcurrentLimit": 5,
        "labels": ["dependencies"],
        "rangeStrategy": "pin",
        "assignees": ["sbaerlocher"],
        "reviewers": ["sbaerlocher"],
        "dependencyDashboardTitle": "ðŸ“¦ Dependency Dashboard",
        "packageRules": [
                {
                        "description": "Makefile Docker images without digest pinning",
                        "matchManagers": ["custom.regex"],
                        "matchDatasources": ["docker"],
                        "matchFileNames": ["^Makefile$"],
                        "pinDigests": false
                },
                {
                        "description": "Security updates with elevated priority",
                        "matchCategories": ["security"],
                        "labels": ["dependencies", "security"],
                        "prPriority": 2,
                        "automerge": true
                },
                {
                        "description": "Group all GitHub Actions updates",
                        "matchManagers": ["github-actions"],
                        "groupName": "GitHub Actions"
                },
                {
                        "description": "Group all Docker image updates",
                        "matchManagers": ["dockerfile", "custom.regex"],
                        "matchDatasources": ["docker"],
                        "groupName": "Docker Images"
                },
                {
                        "description": "Group Alpine packages updates",
                        "matchManagers": ["custom.regex"],
                        "matchDatasources": ["repology"],
                        "matchPackageNames": ["/^alpine_3_21\\//"],
                        "groupName": "Alpine Packages"
                },
                {
                        "description": "Group non-breaking updates (patch and minor)",
                        "matchUpdateTypes": ["patch", "minor"],
                        "groupName": "Non-breaking Updates",
                        "minimumReleaseAge": "3 days",
                        "automerge": true
                },
                {
                        "description": "Major version updates (potential breaking changes)",
                        "matchUpdateTypes": ["major"],
                        "labels": ["dependencies", "breaking"],
                        "minimumReleaseAge": "7 days"
                }
        ],
        "vulnerabilityAlerts": {
                "enabled": true,
                "labels": ["dependencies", "security"]
        },
        "customManagers": [
                {
                        "description": "Alpine packages in Dockerfile",
                        "customType": "regex",
                        "managerFilePatterns": ["/^Dockerfile$/"],
                        "matchStrings": [
                                "(?:RUN\\s+(?:apk update\\s+&&\\s+)?apk add --no-cache\\s+|\\\\\\s+)(?<depName>[a-z][a-z0-9-]*)(=(?<currentValue>[a-zA-Z0-9-._]+))?"
                        ],
                        "versioningTemplate": "loose",
                        "datasourceTemplate": "repology",
                        "packageNameTemplate": "alpine_3_21/{{depName}}"
                },
                {
                        "description": "Docker images in Makefile",
                        "customType": "regex",
                        "managerFilePatterns": ["/^Makefile$/"],
                        "matchStrings": [
                                "(?:docker\\s+run(?:[^\\n]*?)\\s+)(?<depName>[a-z0-9]+(?:[._-][a-z0-9]+)*(?:\\/[a-z0-9]+(?:[._-][a-z0-9]+)*)*):(?<currentValue>[0-9v][A-Za-z0-9._-]*)(?:@(?<currentDigest>sha256:[a-f0-9]{64}))?"
                        ],
                        "datasourceTemplate": "docker",
                        "versioningTemplate": "docker"
                }
        ]
}
