{
        "$schema": "https://docs.renovatebot.com/renovate-schema.json",
        "extends": [
                "config:best-practices",
                ":dependencyDashboard",
                ":maintainLockFilesWeekly",
                ":automergePatch",
                ":semanticCommits"
        ],
        "timezone": "Europe/Zurich",
        "schedule": ["before 5am on Friday"],
        "prHourlyLimit": 3,
        "prConcurrentLimit": 8,
        "labels": ["dependencies"],
        "updatePinnedDependencies": true,
        "pruneBranchAfterAutomerge": true,
        "rangeStrategy": "pin",
        "assignees": ["sbaerlocher"],
        "reviewers": ["sbaerlocher"],
        "dependencyDashboardTitle": "ðŸ“¦ Dependency Dashboard",
        "rebaseWhen": "auto",
        "branchPrefix": "renovate/",
        "commitMessageAction": "chore",
        "packageRules": [
                {
                        "description": "Security updates - Automerge",
                        "matchCategories": ["security"],
                        "labels": ["dependencies", "security"],
                        "prPriority": 2,
                        "automerge": true
                },
                {
                        "description": "GitHub Actions updates",
                        "matchManagers": ["github-actions"],
                        "groupName": "GitHub Actions",
                        "prConcurrentLimit": 10
                },
                {
                        "description": "Docker image updates",
                        "matchManagers": ["dockerfile", "custom.regex"],
                        "matchDatasources": ["docker"],
                        "groupName": "Docker Images",
                        "prConcurrentLimit": 10
                },
                {
                        "description": "Alpine packages (repology)",
                        "matchManagers": ["custom.regex"],
                        "matchDatasources": ["repology"],
                        "matchPackageNames": ["/^alpine_3_21\\//"],
                        "groupName": "Alpine Packages",
                        "prConcurrentLimit": 10
                },
                {
                        "description": "Non-breaking updates (patch & minor)",
                        "matchUpdateTypes": ["patch", "minor"],
                        "groupName": "Non-breaking Updates",
                        "minimumReleaseAge": "3 days",
                        "prPriority": 0
                },
                {
                        "description": "Major updates (breaking changes)",
                        "matchUpdateTypes": ["major"],
                        "labels": ["dependencies", "breaking"],
                        "minimumReleaseAge": "7 days",
                        "automerge": false
                },
                {
                        "description": "Alpine base image",
                        "matchDatasources": ["docker"],
                        "groupName": "alpine",
                        "matchPackageNames": ["/alpine/"]
                },
                {
                        "description": "Container structure test image",
                        "matchDatasources": ["docker"],
                        "groupName": "container-structure-test",
                        "matchPackageNames": [
                                "/gcr.io/gcp-runtimes/container-structure-test/",
                                "/ghcr.io/googlecontainertools/container-structure-test/"
                        ]
                },
                {
                        "description": "Python dependencies (non-major)",
                        "matchDatasources": ["pip"],
                        "matchUpdateTypes": ["minor", "patch"],
                        "groupName": "python dependencies (non-major)"
                },
                {
                        "description": "Ansible core updates",
                        "matchDatasources": ["pip"],
                        "groupName": "ansible-core",
                        "matchPackageNames": ["/ansible-core/"]
                },
                {
                        "description": "Makefile Docker images",
                        "matchManagers": ["custom.regex"],
                        "matchDatasources": ["docker"],
                        "matchFileNames": ["^Makefile$"],
                        "groupName": "Makefile Docker images"
                },
                {
                        "description": "Workflow Docker images",
                        "matchManagers": ["custom.regex"],
                        "matchDatasources": ["docker"],
                        "matchFileNames": [".github/workflows/**"],
                        "groupName": "Workflow Docker Images"
                }
        ],
        "vulnerabilityAlerts": {
                "enabled": true,
                "labels": ["dependencies", "security"]
        },
        "customManagers": [
                {
                        "description": "Alpine packages in Dockerfile",
                        "customType": "regex",
                        "fileMatch": ["^Dockerfile$"],
                        "matchStrings": [
                                "(?:RUN\\s+(?:apk update\\s+&&\\s+)?apk add --no-cache\\s+|\\\\\\s+)(?<depName>[a-z][a-z0-9-]*)(=(?<currentValue>[a-zA-Z0-9-._]+))?"
                        ],
                        "versioningTemplate": "loose",
                        "datasourceTemplate": "repology",
                        "packageNameTemplate": "alpine_3_21/{{depName}}"
                },
                {
                        "description": "Node.js in Makefile docker run commands",
                        "customType": "regex",
                        "fileMatch": ["^Makefile$"],
                        "matchStrings": [
                                "docker\\s+run\\s+(?:[^\\n]*?\\s+)node:(?<currentValue>[0-9]+\\.[0-9]+\\.[0-9]+)(?:-alpine[0-9\\.]*)?"
                        ],
                        "datasourceTemplate": "docker",
                        "depNameTemplate": "node",
                        "versioningTemplate": "node"
                },
                {
                        "description": "General Docker images in Makefile docker run commands",
                        "customType": "regex",
                        "fileMatch": ["^Makefile$"],
                        "matchStrings": [
                                "docker\\s+run\\s+(?:[^\\n]*?\\s+)(?<depName>[a-z0-9/-]+(?:[.][a-z0-9]+)+\\/[a-z0-9/-]+|[a-z0-9/-]+/[a-z0-9/-]+|busybox):(?<currentValue>v?[0-9]+\\.[0-9]+\\.[0-9]+|[0-9]+\\.[0-9]+)(?:@(?<currentDigest>sha256:[a-f0-9]+))?"
                        ],
                        "datasourceTemplate": "docker",
                        "versioningTemplate": "semver",
                        "autoReplaceStringTemplate": "{{depName}}:{{newValue}}{{#if newDigest}}@{{newDigest}}{{/if}}"
                },
                {
                        "description": "Container Structure Test in GitHub workflows",
                        "customType": "regex",
                        "fileMatch": ["\\.github/workflows/[^/]+\\.ya?ml$"],
                        "matchStrings": [
                                "ghcr.io/googlecontainertools/container-structure-test:(?<currentValue>[0-9]+\\.[0-9]+\\.[0-9]+)"
                        ],
                        "datasourceTemplate": "docker",
                        "depNameTemplate": "ghcr.io/googlecontainertools/container-structure-test",
                        "versioningTemplate": "semver"
                },
                {
                        "description": "Docker images in docker run commands in GitHub workflows",
                        "customType": "regex",
                        "fileMatch": ["\\.github/workflows/[^/]+\\.ya?ml$"],
                        "matchStrings": [
                                "docker\\s+run\\s+--rm[^:]*\\s+(?<depName>[a-z0-9/-]+(?:[.][a-z0-9]+)+\\/[a-z0-9/-]+|[a-z0-9/-]+/[a-z0-9/-]+):(?<currentValue>[0-9]+\\.[0-9]+\\.[0-9]+)"
                        ],
                        "datasourceTemplate": "docker",
                        "versioningTemplate": "semver"
                },
                {
                        "description": "Docker images in Trivy image-ref in GitHub workflows",
                        "customType": "regex",
                        "fileMatch": ["\\.github/workflows/[^/]+\\.ya?ml$"],
                        "matchStrings": [
                                "image-ref:\\s*\"(?<depName>[a-z0-9/-]+):(?<currentValue>[a-z0-9.-]+)\""
                        ],
                        "datasourceTemplate": "docker",
                        "versioningTemplate": "semver"
                }
        ],
        "dockerfile": {
                "fileMatch": ["^Dockerfile$"]
        },
        "github-actions": {
                "fileMatch": ["\\.github/workflows/[^/]+\\.ya?ml$"]
        }
}
