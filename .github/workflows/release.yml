name: Docker Image Release

on:
    push:
        branches:
            - main
        paths:
            - "requirements.txt"
            - "Dockerfile"
            - "CHANGELOG.md"
    workflow_dispatch:
        inputs:
            force_release:
                description: "Force create release even if no changes detected"
                required: false
                type: boolean
                default: false

permissions:
    contents: write

jobs:
    create-release:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
              with:
                  fetch-depth: 0

            - name: Extract versions and date
              id: get_info
              run: |
                  ansible_version="$(grep '^ansible-core==' requirements.txt | cut -d'=' -f3)"
                  current_date=$(date '+%Y-%m-%d')
                  echo "ansible_version=${ansible_version}" >> "$GITHUB_OUTPUT"
                  echo "release_date=${current_date}" >> "$GITHUB_OUTPUT"
                  echo "release_tag=${current_date}" >> "$GITHUB_OUTPUT"

            - name: Check if release exists
              id: check_release
              run: |
                  if gh release view "${{ steps.get_info.outputs.release_tag }}" > /dev/null 2>&1; then
                    echo "release_exists=true" >> "$GITHUB_OUTPUT"
                  else
                    echo "release_exists=false" >> "$GITHUB_OUTPUT"
                  fi
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract changelog for current date
              id: extract_changelog
              if: steps.check_release.outputs.release_exists == 'false' || github.event.inputs.force_release == 'true'
              run: |
                  # Extract changelog section for current date
                  if grep -q "## \[${{ steps.get_info.outputs.release_date }}\]" CHANGELOG.md; then
                    # Extract from current date to next date section or end
                    awk '/^## \['"${{ steps.get_info.outputs.release_date }}"'\]/{flag=1; next} /^## \[.*\]/ && flag {exit} flag' CHANGELOG.md > changelog_section.md
                    echo "changelog_found=true" >> "$GITHUB_OUTPUT"
                  else
                    echo "changelog_found=false" >> "$GITHUB_OUTPUT"
                    echo "No changelog entry found for ${{ steps.get_info.outputs.release_date }}" > changelog_section.md
                  fi

            - name: Generate Release Notes
              if: steps.check_release.outputs.release_exists == 'false' || github.event.inputs.force_release == 'true'
              run: |
                  cat > release_notes.md << 'EOF'
                  ## Rolling Release - ${{ steps.get_info.outputs.release_date }}

                  This is a rolling release Docker image based on Ansible Core ${{ steps.get_info.outputs.ansible_version }}.

                  ### Container Information
                  - **Ansible Core Version**: ${{ steps.get_info.outputs.ansible_version }}
                  - **Base Image**: Alpine Linux 3.22
                  - **Performance**: Mitogen integration for 10x faster execution
                  - **Inventory**: Modern YAML-based configuration
                  - **Available Tools**: kubectl, helm, kustomize, jq, gnupg, git

                  ### Container Images
                  - **Docker Hub**: `arillso/ansible:${{ steps.get_info.outputs.ansible_version }}`
                  - **Docker Hub Latest**: `arillso/ansible:latest`
                  - **GitHub Container Registry**: `ghcr.io/arillso/ansible:${{ steps.get_info.outputs.ansible_version }}`

                  ### Usage
                  ```bash
                  # Use specific Ansible version
                  docker run --rm -v $(pwd):/workspace arillso/ansible:${{ steps.get_info.outputs.ansible_version }} ansible-playbook playbook.yml

                  # Use latest version
                  docker run --rm -v $(pwd):/workspace arillso/ansible:latest ansible-playbook playbook.yml
                  ```

                  EOF

                  # Add changelog section if found
                  if [ "${{ steps.extract_changelog.outputs.changelog_found }}" = "true" ]; then
                    echo "### Changes in this Release" >> release_notes.md
                    echo "" >> release_notes.md
                    cat changelog_section.md >> release_notes.md
                    echo "" >> release_notes.md
                  fi

                  echo "### Full Changelog" >> release_notes.md
                  echo "See [CHANGELOG.md](CHANGELOG.md) for complete change history." >> release_notes.md

            - name: Create or Update Release
              if: steps.check_release.outputs.release_exists == 'false' || github.event.inputs.force_release == 'true'
              uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191 # v2
              with:
                  tag_name: "${{ steps.get_info.outputs.release_tag }}"
                  name: "Ansible Container - ${{ steps.get_info.outputs.release_date }}"
                  body_path: release_notes.md
                  draft: false
                  prerelease: false
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
